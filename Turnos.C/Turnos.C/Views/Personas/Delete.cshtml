@model Turnos.C.Models.Persona

@{
    ViewData["Title"] = "Delete";
    var returnUrl = !string.IsNullOrEmpty(Context.Request.Query["returnUrl"])
        ? Context.Request.Query["returnUrl"].ToString()
        : (ViewBag.ReturnUrl as string ?? Url.Action("Index", "Personas"));
}

<h1>Delete</h1>

<h3>¿Está seguro de esta acción? No se puede deshacer</h3>
<div>
    <h4>Persona</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.UserName)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.UserName)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Email)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Email)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.FechaAlta)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.FechaAlta)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Nombre)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Nombre)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Apellido)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Apellido)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.DNI)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.DNI)</dd>
    </dl>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <div>@error.ErrorMessage</div>
            }
        </div>
    }

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" name="returnUrl" value="@returnUrl" />
        <input type="submit" value="Eliminar" class="btn btn-danger" /> |
        <a class="btn btn-secondary" href="@returnUrl">Volver</a>
    </form>
</div>
